# SmartCloudOps AI - Kubernetes Ingress
# Phase 3 Week 5: Infrastructure as Code (IaC) - Ingress Configuration

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: smartcloudops-ingress
  namespace: smartcloudops
  labels:
    app.kubernetes.io/name: smartcloudops-ai
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: smartcloudops-platform
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:123456789012:certificate/your-cert-arn
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    
    # Security headers
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect",
        "RedirectConfig": {
          "Protocol": "HTTPS",
          "Port": "443",
          "StatusCode": "HTTP_301"
        }
      }
    
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # Load balancer configuration
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      routing.http2.enabled=true,
      idle_timeout.timeout_seconds=60,
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=smartcloudops-alb-logs,
      access_logs.s3.prefix=production
    
    # Security groups
    alb.ingress.kubernetes.io/security-groups: sg-12345678,sg-87654321
    
    # Tags
    alb.ingress.kubernetes.io/tags: |
      Environment=production,
      Project=SmartCloudOps-AI,
      ManagedBy=Kubernetes
spec:
  ingressClassName: alb
  tls:
    - hosts:
        - api.smartcloudops.ai
        - smartcloudops.ai
      secretName: smartcloudops-tls
  rules:
    - host: api.smartcloudops.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: smartcloudops-api
                port:
                  number: 80
    - host: smartcloudops.ai
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: smartcloudops-api
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: smartcloudops-network-policy
  namespace: smartcloudops
  labels:
    app.kubernetes.io/name: smartcloudops-ai
    app.kubernetes.io/component: network-policy
    app.kubernetes.io/part-of: smartcloudops-platform
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: smartcloudops-ai
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow ingress from ALB
    - from:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: TCP
          port: 5000
    # Allow ingress from monitoring namespace
    - from:
        - namespaceSelector:
            matchLabels:
              name: smartcloudops-monitoring
      ports:
        - protocol: TCP
          port: 5000
    # Allow inter-pod communication
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: smartcloudops-ai
      ports:
        - protocol: TCP
          port: 5000
  egress:
    # Allow egress to internet (for external APIs)
    - {}
    # Allow egress to RDS
    - to: []
      ports:
        - protocol: TCP
          port: 5432
    # Allow egress to Redis
    - to: []
      ports:
        - protocol: TCP
          port: 6379
    # Allow DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53
