# SmartCloudOps AI - Kubernetes Deployment
# Phase 3 Week 5: Infrastructure as Code (IaC) - Application Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: smartcloudops-api
  namespace: smartcloudops
  labels:
    app.kubernetes.io/name: smartcloudops-ai
    app.kubernetes.io/component: api-server
    app.kubernetes.io/part-of: smartcloudops-platform
    app.kubernetes.io/version: "2.0.0"
  annotations:
    deployment.kubernetes.io/revision: "1"
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
    prometheus.io/path: "/api/metrics"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: smartcloudops-ai
      app.kubernetes.io/component: api-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smartcloudops-ai
        app.kubernetes.io/component: api-server
        app.kubernetes.io/part-of: smartcloudops-platform
        app.kubernetes.io/version: "2.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/api/metrics"
        config.linkerd.io/proxy-memory-limit: "128Mi"
        config.linkerd.io/proxy-memory-request: "64Mi"
    spec:
      serviceAccountName: smartcloudops-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      imagePullSecrets:
        - name: smartcloudops-registry-secret
      containers:
        - name: smartcloudops-api
          image: smartcloudops/api:2.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: metrics
              containerPort: 5000
              protocol: TCP
          env:
            # Configuration from ConfigMap
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: ENVIRONMENT
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: DEBUG
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: LOG_LEVEL
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: DATABASE_PORT
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: DATABASE_NAME
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: REDIS_PORT
            
            # Secrets
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: smartcloudops-secrets
                  key: DATABASE_USERNAME
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smartcloudops-secrets
                  key: DATABASE_PASSWORD
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: smartcloudops-secrets
                  key: SECRET_KEY
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: smartcloudops-secrets
                  key: JWT_SECRET
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smartcloudops-secrets
                  key: REDIS_PASSWORD
                  optional: true
          
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 2Gi
          
          # Health checks
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          
          startupProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
            successThreshold: 1
          
          # Security context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          
          # Volume mounts
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
            - name: logs
              mountPath: /app/logs
      
      # Pod disruption settings
      terminationGracePeriodSeconds: 30
      
      # Volumes
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir:
            sizeLimit: 1Gi
        - name: logs
          emptyDir:
            sizeLimit: 500Mi
      
      # Node selection
      nodeSelector:
        kubernetes.io/arch: amd64
      
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - smartcloudops-ai
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - api-server
                topologyKey: kubernetes.io/hostname
      
      # Tolerations for dedicated nodes
      tolerations:
        - key: "smartcloudops.ai/dedicated"
          operator: "Equal"
          value: "api"
          effect: "NoSchedule"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smartcloudops-worker
  namespace: smartcloudops
  labels:
    app.kubernetes.io/name: smartcloudops-ai
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: smartcloudops-platform
    app.kubernetes.io/version: "2.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: smartcloudops-ai
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smartcloudops-ai
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: smartcloudops-platform
        app.kubernetes.io/version: "2.0.0"
    spec:
      serviceAccountName: smartcloudops-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      imagePullSecrets:
        - name: smartcloudops-registry-secret
      containers:
        - name: smartcloudops-worker
          image: smartcloudops/worker:2.0.0
          imagePullPolicy: IfNotPresent
          command: ["python", "-m", "celery"]
          args: ["worker", "-A", "app.worker", "--loglevel=info", "--concurrency=4"]
          
          env:
            # Same environment variables as API
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: ENVIRONMENT
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: DATABASE_HOST
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: smartcloudops-config
                  key: REDIS_HOST
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smartcloudops-secrets
                  key: DATABASE_PASSWORD
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: smartcloudops-secrets
                  key: SECRET_KEY
          
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi
          
          # Health check for worker process
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "celery -A app.worker inspect ping"
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: worker-data
              mountPath: /app/data
      
      volumes:
        - name: tmp
          emptyDir: {}
        - name: worker-data
          emptyDir:
            sizeLimit: 2Gi
      
      # Schedule on compute-optimized nodes
      nodeSelector:
        node-type: compute
      
      tolerations:
        - key: "compute"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
