# Pre-commit configuration for SmartCloudOps AI
# Enforces code quality, formatting, and security standards

repos:
  # Python code formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88, --target-version=py311]
        types: [python]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        types: [python]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [
          --max-line-length=88,
          --max-complexity=15,
          --ignore=W503,E203,C901,W504,
          --exclude=.git,__pycache__,venv,.venv
        ]
        types: [python]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, ., -f, json, -o, bandit-results.json]
        exclude: ^(tests/|docs/|scripts/|venv/|.venv/)
        types: [python]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-strict-optional]
        exclude: ^(tests/|docs/|scripts/|venv/|.venv/)
        types: [python]

  # Docstring formatting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: ^(tests/|docs/|scripts/|venv/|.venv/)
        types: [python]

  # Trailing whitespace and end-of-file
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
        args: [--insert-final-newline]
      - id: check-yaml
      - id: check-json
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.1
    hooks:
      - id: prettier
        types: [yaml]
        args: [--prose-wrap=always]

  # Terraform formatting
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.88.0
    hooks:
      - id: terraform_fmt
        args: [--args=-no-color, --args=-diff, --args=-write=true]
      - id: terraform_validate
        args: [--args=-no-color]
      - id: terraform_docs
        args: [--args=sort=true, --args=sort-inputs=true]

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Shell script linting
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.9.0
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  # Git hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-ast
      - id: check-json
      - id: check-merge-conflict
      - id: check-yaml
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: trailing-whitespace

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: ^(tests/|docs/|scripts/|venv/|.venv/)|

  # Commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Test coverage check
  - repo: local
    hooks:
      - id: test-coverage
        name: Test Coverage Check
        entry: python -m pytest --cov=app --cov=ml_models --cov-fail-under=95
        language: system
        pass_filenames: false
        always_run: true
        stages: [push]

  # Security validation
  - repo: local
    hooks:
      - id: security-validation
        name: Security Validation
        entry: python scripts/security/validate_security.py
        language: system
        pass_filenames: false
        always_run: true
        stages: [push]

# Global configuration
default_language_version:
  python: python3.11

# Hook execution order
default_stages: [commit, push]

# Skip hooks for specific files
exclude: |
  (?x)^(
      \.git/|
      \.venv/|
      venv/|
      __pycache__/|
      \.pytest_cache/|
      node_modules/|
      dist/|
      build/|
      \.tox/|
      docs/_build/|
      *.egg-info/|
      \.coverage|
      coverage\.xml|
      htmlcov/|
      bandit-results\.json|
      \.secrets\.baseline
  )$ 