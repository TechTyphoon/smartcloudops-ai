version: '3.8'

services:
  # Main Flask Application
  smartcloudops-app:
    build: .
    ports:
      - "3003:3000"
    environment:
      - FLASK_ENV=development
      - PROMETHEUS_URL=http://prometheus:9090
      - REQUIRE_APPROVAL=false
      - MAX_ACTIONS_PER_HOUR=3
      - COOLDOWN_MINUTES=10
      - REMEDIATION_TAG_KEY=Name
      - REMEDIATION_TAG_VALUE=smartcloudops-ai-application
      - SSM_SERVICE_NAME=smartcloudops-app
      - AWS_REGION=ap-south-1
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
    volumes:
      - ./app:/app/app
      - ./scripts:/app/scripts
      - ./ml_models:/app/ml_models
    depends_on:
      - prometheus
      - grafana
    networks:
      - cloudops-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./terraform/configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - cloudops-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3004:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./terraform/configs/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./terraform/configs/grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      - ./terraform/configs/grafana-dashboard-system-overview.json:/etc/grafana/provisioning/dashboards/grafana-dashboard-system-overview.json:ro
      - ./terraform/configs/grafana-dashboard-prometheus-monitoring.json:/etc/grafana/provisioning/dashboards/grafana-dashboard-prometheus-monitoring.json:ro
    depends_on:
      - prometheus
    networks:
      - cloudops-network

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - cloudops-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  cloudops-network:
    driver: bridge