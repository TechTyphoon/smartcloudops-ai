# SmartCloudOps AI - Default Values
# This is a YAML-formatted file for configuring the Helm chart

# Global settings
global:
  imageRegistry: ""
  storageClass: ""
  
# Backend API configuration  
backend:
  enabled: true
  replicaCount: 2
  
  image:
    repository: smartcloudops/backend
    tag: "3.3.0"
    pullPolicy: IfNotPresent
    
  service:
    type: ClusterIP
    port: 5000
    targetPort: 5000
    
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi
      
  # Health checks
  livenessProbe:
    httpGet:
      path: /healthz
      port: 5000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    
  readinessProbe:
    httpGet:
      path: /readyz
      port: 5000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
    
  # Auto-scaling
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    
  # Environment variables
  env:
    FLASK_ENV: production
    PROMETHEUS_URL: http://prometheus:9090
    REQUIRE_APPROVAL: "false"
    MAX_ACTIONS_PER_HOUR: "3"
    COOLDOWN_MINUTES: "10"
    
# Frontend configuration
frontend:
  enabled: true
  replicaCount: 2
  
  image:
    repository: smartcloudops/frontend
    tag: "3.3.0"
    pullPolicy: IfNotPresent
    
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
    
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
      
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: smartcloudops.local
      paths:
        - path: /api
          pathType: Prefix
          service: backend
        - path: /
          pathType: Prefix
          service: frontend
  tls:
    - secretName: smartcloudops-tls
      hosts:
        - smartcloudops.local

# Database configuration
postgresql:
  enabled: true
  auth:
    existingSecret: "smartcloudops-secrets"
    secretKeys:
      adminPasswordKey: "postgres-password"
      userPasswordKey: "postgres-user-password"
    username: "cloudops"
    database: "cloudops"
  primary:
    persistence:
      enabled: true
      size: 20Gi
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi

# Redis configuration  
redis:
  enabled: true
  auth:
    enabled: true
    existingSecret: "smartcloudops-secrets"
    existingSecretPasswordKey: "redis-password"
  master:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    server:
      persistentVolume:
        size: 50Gi
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 2000m
          memory: 2Gi
          
  grafana:
    enabled: true
    persistence:
      enabled: true
      size: 10Gi
    adminPassword: admin
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi

# Security
security:
  podSecurityPolicy:
    enabled: false
  networkPolicies:
    enabled: true
    
# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Node selector and tolerations
nodeSelector: {}
tolerations: []
affinity: {}
