apiVersion: apps/v1
kind: Deployment
metadata:
  name: smartcloudops-app
  namespace: smartcloudops
  labels:
    app: smartcloudops-app
    tier: application
    version: "3.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: smartcloudops-app
  template:
    metadata:
      labels:
        app: smartcloudops-app
        tier: application
        version: "3.0.0"
    spec:
      containers:
      - name: smartcloudops
        image: ghcr.io/your-username/smartcloudops:latest
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: smartcloudops-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: smartcloudops-config
              key: REDIS_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: smartcloudops-secrets
              key: SECRET_KEY
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: smartcloudops-config
              key: FLASK_ENV
        - name: GUNICORN_WORKERS
          valueFrom:
            configMapKeyRef:
              name: smartcloudops-config
              key: GUNICORN_WORKERS
        - name: GUNICORN_THREADS
          valueFrom:
            configMapKeyRef:
              name: smartcloudops-config
              key: GUNICORN_THREADS
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: smartcloudops-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: smartcloudops-app
  namespace: smartcloudops
  labels:
    app: smartcloudops-app
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: smartcloudops-app
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: smartcloudops-app-hpa
  namespace: smartcloudops
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: smartcloudops-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
